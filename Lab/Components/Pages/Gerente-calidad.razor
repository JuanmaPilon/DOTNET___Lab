@page "/gerente-calidad"
@using Lab.Components.Models
@inject NavigationManager NavigationManager
@inject UserSessionService UserSessionService
@rendermode InteractiveServer

<div class="d-flex justify-content-center" style="margin-top: 5vh;">
    <div class="card shadow" style="max-width: 1200px; background-color: #f8f9fa; width: 100%; padding: 2rem;">
        <h3 class="text-center" style="font-size: 100px">Bienvenido, Gerente</h3>

        <p class="text-center">Username: @username</p>
        <p class="text-center">Role: @role</p>

        <div class="d-flex justify-content-center">
            <NavLink class="btn btn-secondary btn-lg mx-2" href="/EstadisticasTiempoReal">
                Datos en tiempo real
            </NavLink>
            <NavLink class="btn btn-secondary btn-lg mx-2" href="/EstadisticasHistorial">
                Historial de tramites
            </NavLink>
        </div>
    </div>
</div>
@code {
    private string username;
    private string role;

    protected override void OnInitialized()
    {
      
        // Obtener el nombre de usuario de la sesión actual
        var session = UserSessionService.GetCurrentSession(); // Sin necesidad de pasar el nombre de usuario

        username = session.username ?? "No user";
        role = session.role ?? "No role";
    }
    protected override async Task OnInitializedAsync()
    {
        // Verificar si el usuario está logueado
        if (!UserSessionService.IsUserLoggedIn())
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        // Verificar el rol del usuario
        var (username, role) = UserSessionService.GetCurrentSession();

        if (role != "Administrador" && role != "GerenteCalidad")
        {
            // Redirigir basado en el rol del usuario
            switch (role)
            {
                case "Operario":
                    NavigationManager.NavigateTo("/cubiculo");
                    break;
                default:
                    NavigationManager.NavigateTo("/");
                    break;
            }
            return;
        }

    }
}