@page "/gerente-calidad"
@using Lab.Components.Models
@inject NavigationManager NavigationManager
@inject UserSessionService UserSessionService
@rendermode InteractiveServer

<h3>Bienvenido, Gerente</h3>

<p>Esta es la página de los gerentes.</p>

<p>Username: @username</p>
<p>Role: @role</p>
<NavLink class="btn btn-secondary btn-lg" href="/EstadisticasTiempoReal">
    Datos en tiempo real
</NavLink>
<NavLink class="btn btn-secondary btn-lg" href="/EstadisticasHistorial">
    Historial de tramites
</NavLink>

@code {
    private string username;
    private string role;

    protected override void OnInitialized()
    {
      
        // Obtener el nombre de usuario de la sesión actual
        var session = UserSessionService.GetCurrentSession(); // Sin necesidad de pasar el nombre de usuario

        username = session.username ?? "No user";
        role = session.role ?? "No role";
    }
    protected override async Task OnInitializedAsync()
    {
        // Verificar si el usuario está logueado
        if (!UserSessionService.IsUserLoggedIn())
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        // Verificar el rol del usuario
        var (username, role) = UserSessionService.GetCurrentSession();

        if (role != "Administrador" && role != "GerenteCalidad")
        {
            // Redirigir basado en el rol del usuario
            switch (role)
            {
                case "Operario":
                    NavigationManager.NavigateTo("/cubiculo");
                    break;
                default:
                    NavigationManager.NavigateTo("/");
                    break;
            }
            return;
        }

    }
}