@page "/puestos/create"
@using Microsoft.EntityFrameworkCore
@using Lab.Components.Models
@inject IDbContextFactory<Lab.Data.LabContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Puesto</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Puesto" OnValidSubmit="AddPuesto" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/puestos">Back to List</a>
</div>

@code {
    private Puesto Puesto { get; set; } = new()
    {
        idOficina =1
    };


    private async Task AddPuesto()
    {
        Console.WriteLine($"idOficina ingresado: {Puesto.idOficina}");

        if (Puesto.idOficina == 0)
        {
            Console.WriteLine("Error: idOficina no fue seleccionado correctamente.");
            return;
        }

        Puesto.Estado = true;
        Puesto.TramiteActual = 0;

        using var context = DbFactory.CreateDbContext();

        var oficinaExiste = await context.Oficina.AnyAsync(o => o.idOficina == Puesto.idOficina);

        if (!oficinaExiste)
        {
            Console.WriteLine("Error: La Oficina no existe.");
            return;
        }

        context.Puesto.Add(Puesto);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/puestos");
    }


}

