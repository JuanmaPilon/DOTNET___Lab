@page "/admin"
@using Lab.Components.Models
@inject NavigationManager NavigationManager
@inject UserSessionService UserSessionService
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<Lab.Data.LabContext> DbFactory

@rendermode InteractiveServer
<div class="container mt-5">
    <!-- Panel de información del usuario -->
    <div class="card mb-4 border-dark">
        <div class="card-header bg-dark text-white">
            <h3>Admin Page</h3>
        </div>
        <div class="card-body text-dark">
            <p><strong>Username:</strong> @username</p>
            <p><strong>Role:</strong> @role</p>
        </div>
    </div>

    <!-- Panel de acceso a las diferentes secciones -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        <div class="col">
            <div class="card shadow-sm border-dark">
                <div class="card-body text-center">
                    <h5 class="card-title text-dark">Oficinas</h5>
                    <NavLink class="btn btn-outline-dark w-100" href="/oficinas">Acceder</NavLink>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm border-dark">
                <div class="card-body text-center">
                    <h5 class="card-title text-dark">Puestos</h5>
                    <NavLink class="btn btn-outline-dark w-100" href="/puestos">Acceder</NavLink>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm border-dark">
                <div class="card-body text-center">
                    <h5 class="card-title text-dark">Operarios</h5>
                    <NavLink class="btn btn-outline-dark w-100" href="/operarios">Acceder</NavLink>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm border-dark">
                <div class="card-body text-center">
                    <h5 class="card-title text-dark">Administradores</h5>
                    <NavLink class="btn btn-outline-dark w-100" href="/administradors">Acceder</NavLink>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm border-dark">
                <div class="card-body text-center">
                    <h5 class="card-title text-dark">Gerentes de Calidad</h5>
                    <NavLink class="btn btn-outline-dark w-100" href="/gerentecalidads">Acceder</NavLink>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm border-dark">
                <div class="card-body text-center">
                    <h5 class="card-title text-dark">Monitor Global</h5>
                    <NavLink class="btn btn-outline-dark w-100" href="/monitorAdmin">Acceder</NavLink>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private string username;
    private string role;
    private List<Oficina> OficinasDisponibles = new();

    protected override void OnInitialized()
    {
       
        // Obtener el nombre de usuario de la sesión actual
        var session = UserSessionService.GetCurrentSession(); // Sin necesidad de pasar el nombre de usuario

        username = session.username ?? "No user";
        role = session.role ?? "No role";

       
    }
    protected override async Task OnInitializedAsync()
    {
        // Cargar las oficinas disponibles si es admin
        if (!UserSessionService.IsUserLoggedIn())
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        // Verificar el rol del usuario
        var (username, role) = UserSessionService.GetCurrentSession();

        if (role != "Administrador")
        {
            // Redirigir basado en el rol del usuario
            switch (role)
            {
                case "GerenteCalidad":
                    NavigationManager.NavigateTo("/gerente-calidad");
                    break;
                case "Operario":
                    NavigationManager.NavigateTo("/cubiculo");
                    break;
                default:
                    NavigationManager.NavigateTo("/");
                    break;
            }
            return;
        }
    }

}