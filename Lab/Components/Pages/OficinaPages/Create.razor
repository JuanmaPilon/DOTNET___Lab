@page "/oficinas/create"
@using Microsoft.EntityFrameworkCore
@using Lab.Components.Models
@inject IDbContextFactory<Lab.Data.LabContext> DbFactory
@inject NavigationManager NavigationManager
@inject UserSessionService UserSessionService
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<h1>Create Oficina</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="@Oficina" OnValidSubmit="AddOficina" FormName="create">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre:</label>
                <InputText id="nombre" @bind-Value="Oficina.Nombre" class="form-control" />
                <ValidationMessage For="() => Oficina.Nombre" class="text-danger" />
            </div>                           
           
        <div class="mb-3">
            <select id="ubicacion" @bind="Oficina.Ubicacion" class="form-select" aria-label="Default select example">
                <option selected>Ubicacion</option>
                    <option value="Artigas">Artigas</option>
                    <option value="Canelones">Canelones</option>
                    <option value="Cerro Largo">Cerro Largo </option>
                    <option value="Colonia">Colonia </option>
                    <option value="Durazno">Durazno</option>
                    <option value="Flores">Flores</option>
                    <option value="Florida">Florida</option>
                    <option value="Lavalleja">Lavalleja</option>
                    <option value="Maldonado"> Maldonado</option>
                    <option value="Montevideo">Montevideo</option>
                    <option value="Paysandu">Paysandu</option>
                    <option value="Río Negro">Río Negro</option>
                    <option value="Rivera">Rivera</option>
                    <option value="Rocha">Rocha</option>
                    <option value="Salto">Salto</option>
                    <option value="San Jose">San Jose</option>
                    <option value="Soriano">Soriano</option>
                    <option value="Tacuarembo">Tacuarembo</option>
                    <option value="Treinta y Tres">Treinta y Tres</option>
            </select>
        </div>
            <button type="submit" class=" btn  btn-secondary btn-lg">Create</button>
        </EditForm>
    </div>
</div>
<br/>
<div>
    <a class=" btn  btn-secondary btn-lg" href="/oficinas">Back to List</a>
</div>

@code {
    private Oficina Oficina { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        // Verificar si el usuario está logueado
        if (!UserSessionService.IsUserLoggedIn())
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        // Verificar el rol del usuario
        if (!UserSessionService.HasRole("Administrador"))
        {
            var (username, role) = UserSessionService.GetCurrentSession();

            // Redirigir basado en el rol del usuario
            switch (role)
            {
                case "Operario":
                    NavigationManager.NavigateTo("/cubiculo");
                    break;
                case "GerenteCalidad":
                    NavigationManager.NavigateTo("/gerente-calidad");
                    break;
                default:
                    NavigationManager.NavigateTo("/");
                    break;
            }
            return;
        }
    }
    private async Task AddOficina()
    {
        using var context = DbFactory.CreateDbContext();
        context.Oficina.Add(Oficina);  
        await context.SaveChangesAsync();  

        // Obtener el ID de la oficina recién creada
        var oficinaId = Oficina.idOficina;

        // Crear un nuevo monitor asociado a la oficina recién creada
        var monitor = new Monitor
            {
                idOficina = oficinaId  // Solo asociar la oficina, no asignar IdMonitor
            };

        // Agregar el monitor a la base de datos
        context.Monitor.Add(monitor);
        
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/oficinas");


    }
}
