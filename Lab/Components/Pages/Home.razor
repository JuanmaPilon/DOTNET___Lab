@page "/"
@attribute [StreamRendering]
@inject NavigationManager Navigation
@inject UserSessionService UserSessionService

@rendermode InteractiveServer
@using Lab.Components.Models

<h3>Login</h3>

<div>
    <label>Username:</label>
    <input @bind="username" />
    <br />
    <label>Password:</label>
    <input type="password" @bind="password" />
    <br />
    <button @onclick="Login">Login</button>
</div>

@code {
    private string? username;
    private string? password;

    private async Task Login()
    {
        Console.WriteLine("Login button clicked!");
        Usuario user = AuthenticateUser(username, password);

        if (user != null)
        {
            Console.WriteLine($"User authenticated: {user.Username}, Role: {user.GetRole()}");

            // Guardar datos en la sesión
            UserSessionService.SetUserSession(user.Username, user.GetRole());
            StateHasChanged(); // Fuerza el re-renderizado del componente


            // Navegar basado en el rol
            string role = user.GetRole();
            switch (role)
            {
                case "Administrador":
                    Console.WriteLine("Admin authenticated");                    
                    Navigation.NavigateTo("/admin", forceLoad: true);

                    break;
                case "Operario":
                    Console.WriteLine("Operario authenticated");
                    Navigation.NavigateTo("/operarios", forceLoad: true);
                    break;
                case "GerenteCalidad":
                    Console.WriteLine("GerenteCalidad authenticated");
                    Navigation.NavigateTo("/gerente-calidad", forceLoad: true);
                    break;
                default:
                    Console.WriteLine("Redirigiendo a la página de inicio.");
                    Navigation.NavigateTo("/"); 
                    break;
            }
        }
        else
        {
            Console.WriteLine("Authentication failed. User not found.");
           
        }
    }
    // Método simulado de autenticación
    private Usuario AuthenticateUser(string username, string password)
    {
        if (username == "admin" && password == "admin123")
        {
            Console.WriteLine("Admin authenticated");
            return new Administrador { Username = username, Password = password };
        }
        else if (username == "operario" && password == "operario123")
        {
            Console.WriteLine("Operario authenticated");
            return new Operarios { Username = username, Password = password };
        }
        else if (username == "gerente" && password == "gerente123")
        {
            Console.WriteLine("GerenteCalidad authenticated");
            return new GerenteCalidad { Username = username, Password = password };
        }

        Console.WriteLine("Authentication failed");
        return null;
    }
}
