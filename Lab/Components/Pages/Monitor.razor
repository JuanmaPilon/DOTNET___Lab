@page "/monitor"
@using Lab.Components.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<Lab.Data.LabContext> DbFactory

@rendermode InteractiveServer

<h3>Monitor de Trámites</h3>

@if (TramitesActivos != null && TramitesActivos.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Nro Trámite</th>
                <th>Cédula Cliente</th>
                <th>Nro Puesto</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tramite in TramitesActivos)
            {
                <tr>
                    <td>@tramite.NroTramite</td>
                    <td>@tramite.CedulaCliente</td>
                    <td>@tramite.NroPuesto</td>
                    <td>@tramite.FechaInicio.ToShortDateString()</td>
                    <td>@(tramite.FechaFin?.ToShortDateString() ?? "--/--/--")</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No hay trámites activos.</p>
}

@code {
    private List<Tramite> TramitesActivos { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        TramitesActivos = await context.Tramite.ToListAsync();
    }
}
